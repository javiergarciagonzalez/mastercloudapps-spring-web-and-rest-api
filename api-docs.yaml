openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/comment/{bookId}:
    post:
      tags:
      - book-controller-rest
      summary: Create a comment for a specific book
      operationId: createComment
      parameters:
      - name: bookId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Create Comment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "404":
          description: Book was not found
        "200":
          description: A comment was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDto'
  /api/book:
    post:
      tags:
      - book-controller-rest
      summary: Create a book
      operationId: createPost
      requestBody:
        description: Create Book object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDto'
        required: true
      responses:
        "200":
          description: Found the book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicDto'
        "404":
          description: Book not found
  /api/books:
    get:
      tags:
      - book-controller-rest
      summary: Get all books and their id
      operationId: getBooks
      responses:
        "404":
          description: Books not found
        "200":
          description: Found all books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicDto'
  /api/book/{id}:
    get:
      tags:
      - book-controller-rest
      summary: Get a specific book by providing its id
      operationId: getBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Found the book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDto'
        "404":
          description: Book not found
  /api/comment/{id}:
    delete:
      tags:
      - book-controller-rest
      summary: Delete a comment
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Comment was not found
        "200":
          description: A comment was created
          content:
            application/json: {}
components:
  schemas:
    Comment:
      type: object
      properties:
        content:
          type: string
        user:
          $ref: '#/components/schemas/User'
        rating:
          type: integer
          format: int32
    User:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
    BookDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        summary:
          type: string
        author:
          type: string
        publisher:
          type: string
        publicationDate:
          type: string
        rating:
          type: integer
          format: int32
    BasicDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    BasicDto_BasicDto:
      type: object
